# -*- coding: utf-8 -*-
"""Eth calc-2 (easy).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CUp516w6JrKZfx2LdtFcl-k7aIbYMG44
"""

pip install web3==4.2.1

from web3 import Web3

web3 = Web3(Web3.HTTPProvider("https://mainnet.infura.io/v3/0d465ac89e75471789ce5e99fecab3b5"))

# Commented out IPython magic to ensure Python compatibility.
# %%time
# n = 8916400
# blocks_gas = []
# blocks_gasPrice = []
# blocks_contracts = []
# 
# # за каждый блок майнер получает 2 эфира
# for i in range(10):
#   gas = []
#   price = []
#   kontr = 0
#   for trans in web3.eth.getBlock(n + i)['transactions']:
#     tr = web3.eth.getTransaction(trans)
#     tr_r = web3.eth.getTransactionReceipt(trans)
#     gas.append(tr_r['gasUsed'])
#     price.append(tr['gasPrice'])
#     if tr['input'] != '0x':
#       kontr+=1
#     
#   blocks_gas.append(gas)
#   blocks_gasPrice.append(price)
#   blocks_contracts.append(kontr)
# print(blocks_gas)
# print(blocks_gasPrice)
# print(blocks_contracts)

# Commented out IPython magic to ensure Python compatibility.
# %%time
# file = open('Blocks_info.txt', 'w')
# n = 8916400
# blocks_kom = []
# blocks_otn = []
# blocks_num = []
# trans_count = []
# for i in range (10):
#   kom = 0
#   trans_c = len(blocks_gas[i])
#   for j in range(len(blocks_gas[i])):
#     kom += (blocks_gas[i][j]*blocks_gasPrice[i][j])/(10**18)
#   blocks_num.append(n+i)
#   blocks_otn.append(float("{0:.2f}".format(kom*100/(kom + 2))))
#   blocks_kom.append(float ("{0:.2f}".format(kom + 2)))
#   trans_count.append(trans_c)
#   file.write(str(i + n) + ',' + str(kom + 2) + ',' + str(kom*100/(kom + 2)) + ',' + str(blocks_contracts[i]) + '\n')  
# file.close()
# print(blocks_num)
# print(blocks_otn)
# print(blocks_kom)
# print(trans_count)

import matplotlib.pyplot as plt
plt.scatter(blocks_otn, trans_count, color = 'g')
plt.xlabel('Комиссия %')
plt.ylabel('Количество транзакций')
plt.ylim(0, 500)
plt.grid()
plt.legend()
plt.show()

plt.scatter(blocks_kom, trans_count, color = 'r')
plt.xlabel('Комиссия ')
plt.ylabel('Количество транзакций')
plt.ylim(0, 500)
plt.grid()
plt.legend()
plt.show()

sum_kom = sum(blocks_kom)
num_kom = len(blocks_kom)
avg_kom = sum_kom/num_kom
print(avg_kom)

import statistics
print(statistics.median(blocks_kom))

kom_range_razmah = max(blocks_kom) - min(blocks_kom)
print(kom_range_razmah)

from numpy import mean, var, std
xm = mean(blocks_kom)  # среднее значение
xv = var(blocks_kom)   # дисперсия
xs = std(blocks_kom)   # СКО
print(xm)
print(xv)
print(xs)